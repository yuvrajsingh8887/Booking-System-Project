name: Full CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Sets up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: booking-system/package-lock.json

      # 3. Sets up Java environment for Gradle/Groovy
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # Or whatever version your Gradle project needs

      # 4. Install Node.js dependencies
      - name: Install Node.js Dependencies
        working-directory: ./booking-system
        run: npm ci

      # 5. Run Node.js Tests (or linting)
      # In CI, we usually run tests instead of starting the server.
      # If you don't have tests, you can remove this or change it to a lint command.
    #   - name: Run Node.js Tests
    #     working-directory: ./booking-system
    #     run: npm test

      # 6. Make the Gradle wrapper executable
      # This is a crucial step because file permissions are not always preserved by Git.
      - name: Make gradlew executable
        working-directory: ./groovy-validator
        run: chmod +x ./gradlew

      # 7. Run the Groovy/Gradle application
      # Uses the Linux/macOS gradlew script, not the .bat file
      - name: Run Groovy Validator with Gradle
        working-directory: ./groovy-validator
        run: ./gradlew run